-- MySQL Script generated by MySQL Workbench
-- jue 01 oct 2015 20:28:08 CDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Control_generic
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Control_generic
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Control_generic` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `Control_generic` ;

-- -----------------------------------------------------
-- Table `Control_generic`.`Storage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_generic`.`Storage` (
  `idStorage` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `addressStorage` VARCHAR(45) NOT NULL COMMENT '',
  `capacityStorage` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idStorage`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_generic`.`Inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_generic`.`Inventory` (
  `model` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `brand` VARCHAR(45) NOT NULL COMMENT '',
  `genere` VARCHAR(1) NOT NULL COMMENT '',
  `description` VARCHAR(45) NOT NULL COMMENT '',
  `size` VARCHAR(2) NOT NULL COMMENT '',
  `quantity` INT NOT NULL COMMENT '',
  `buyPrice` FLOAT NOT NULL COMMENT '',
  `sellPrice` FLOAT NOT NULL COMMENT '',
  `Storage_idStorage` INT NOT NULL COMMENT '',
  PRIMARY KEY (`model`, `Storage_idStorage`)  COMMENT '',
  INDEX `fk_Inventory_Storage1_idx` (`Storage_idStorage` ASC)  COMMENT '',
  CONSTRAINT `fk_Inventory_Storage1`
    FOREIGN KEY (`Storage_idStorage`)
    REFERENCES `Control_generic`.`Storage` (`idStorage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_generic`.`Branch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_generic`.`Branch` (
  `idBranch` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `branchName` VARCHAR(45) NOT NULL COMMENT '',
  `branchPhone` INT(10) NOT NULL COMMENT '',
  `branchAddress` VARCHAR(45) NOT NULL COMMENT '',
  `Storage_idStorage` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idBranch`, `Storage_idStorage`)  COMMENT '',
  INDEX `fk_Branch_Storage1_idx` (`Storage_idStorage` ASC)  COMMENT '',
  CONSTRAINT `fk_Branch_Storage1`
    FOREIGN KEY (`Storage_idStorage`)
    REFERENCES `Control_generic`.`Storage` (`idStorage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_generic`.`Employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_generic`.`Employee` (
  `idEmployee` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `employeeName` VARCHAR(45) NOT NULL COMMENT '',
  `employeeLastName` VARCHAR(45) NOT NULL COMMENT '',
  `employeePhone` INT(10) NOT NULL COMMENT '',
  `employeeSalary` FLOAT NOT NULL COMMENT '',
  `Branch_idBranch` INT NOT NULL COMMENT '',
  `Branch_Storage_idStorage` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idEmployee`, `Branch_idBranch`, `Branch_Storage_idStorage`)  COMMENT '',
  INDEX `fk_Employee_Branch1_idx` (`Branch_idBranch` ASC, `Branch_Storage_idStorage` ASC)  COMMENT '',
  CONSTRAINT `fk_Employee_Branch1`
    FOREIGN KEY (`Branch_idBranch` , `Branch_Storage_idStorage`)
    REFERENCES `Control_generic`.`Branch` (`idBranch` , `Storage_idStorage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_generic`.`Movement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_generic`.`Movement` (
  `idMovement` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `movDate` DATE NOT NULL COMMENT '',
  `movTime` TIME NOT NULL COMMENT '',
  `movementType` TINYINT(1) NOT NULL COMMENT '',
  `movMotive` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`idMovement`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_generic`.`Inventory_has_Movement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_generic`.`Inventory_has_Movement` (
  `idInventory_has_mov` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `Inventory_Storage_idStorage` INT NOT NULL COMMENT '',
  `Movement_idMovement` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idInventory_has_mov`, `Inventory_Storage_idStorage`, `Movement_idMovement`)  COMMENT '',
  INDEX `fk_Inventory_has_Movement_Movement1_idx` (`Movement_idMovement` ASC)  COMMENT '',
  INDEX `fk_Inventory_has_Movement_Inventory1_idx` (`idInventory_has_mov` ASC, `Inventory_Storage_idStorage` ASC)  COMMENT '',
  CONSTRAINT `fk_Inventory_has_Movement_Inventory1`
    FOREIGN KEY (`idInventory_has_mov` , `Inventory_Storage_idStorage`)
    REFERENCES `Control_generic`.`Inventory` (`model` , `Storage_idStorage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Inventory_has_Movement_Movement1`
    FOREIGN KEY (`Movement_idMovement`)
    REFERENCES `Control_generic`.`Movement` (`idMovement`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Control_generic`.`Provider`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Control_generic`.`Provider` (
  `idProvider` INT NOT NULL COMMENT '',
  `providerName` VARCHAR(45) NOT NULL COMMENT '',
  `providerAddress` VARCHAR(45) NOT NULL COMMENT '',
  `providerPhone` INT(10) NOT NULL COMMENT '',
  `Storage_idStorage` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idProvider`, `Storage_idStorage`)  COMMENT '',
  INDEX `fk_Provider_Storage1_idx` (`Storage_idStorage` ASC)  COMMENT '',
  CONSTRAINT `fk_Provider_Storage1`
    FOREIGN KEY (`Storage_idStorage`)
    REFERENCES `Control_generic`.`Storage` (`idStorage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
